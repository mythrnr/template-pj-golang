version: "3.8"

services:
  app: &app
    build:
      context: "../build/golang"
      args:
        HTTP_PROXY: "${HTTP_PROXY}"
        HTTPS_PROXY: "${HTTPS_PROXY}"
        GO_VERSION: "${GO_VERSION:-1.16}"
      target: "base"
    image: "mythrnr/template-pj-golang:app-development"
    command: 'realize start --name="app"'
    depends_on:
      - "elasticsearch"
    env_file: "../build/golang/local.env"
    environment:
      HTTP_PROXY: "${HTTP_PROXY}"
      HTTPS_PROXY: "${HTTPS_PROXY}"
      GO111MODULE: "on"
      GOPROXY: "direct"
      GOSUMDB: "off"
    expose:
      - 8080
    logging: &logging
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "10"
    networks:
      - "default"
    restart: "no"
    ulimits: &ulimits
      nofile:
        soft: 65535
        hard: 65535
    user: "golang"
    volumes:
      - type: "bind"
        source: "../.netrc"
        target: "/home/golang/.netrc"
        read_only: true
      - type: "bind"
        source: ".."
        target: "/go/src/github.com/mythrnr/template-pj-golang"
        read_only: false
      - type: "bind"
        source: "../configs/realize.yml"
        target: "/go/src/github.com/mythrnr/template-pj-golang/.realize.yaml"
        read_only: true
      - type: "volume"
        source: "go_pkg"
        target: "/go/pkg"
        read_only: true
    working_dir: "/go/src/github.com/mythrnr/template-pj-golang"

  cli: *app

  database:
    image: "mysql:5.7"
    env_file: "../build/mysql/local.env"
    expose:
      - 3306
    logging: *logging
    networks:
      - "default"
    restart: "no"
    user: "mysql"
    volumes:
      - type: "bind"
        source: "../build/mysql/conf.d"
        target: "/etc/mysql/conf.d"
        read_only: true
      - type: "bind"
        source: "../build/mysql/docker-entrypoint-initdb.d/entry.sh"
        target: "/docker-entrypoint-initdb.d/entry.sh"
        read_only: true
      - type: "bind"
        source: "../build/mysql/docker-entrypoint-initdb.d/files"
        target: "/tmp/files"
        read_only: true
      - type: "volume"
        source: "mysql_data"
        target: "/var/lib/mysql"
        read_only: false

  elasticsearch:
    build:
      context: "../build/elasticsearch"
      args:
        HTTP_PROXY_HOST: "${HTTP_PROXY_HOST}"
        HTTP_PROXY_PORT: "${HTTP_PROXY_PORT}"
        HTTPS_PROXY_HOST: "${HTTPS_PROXY_HOST}"
        HTTPS_PROXY_PORT: "${HTTPS_PROXY_PORT}"
    image: "mythrnr/template-pj-golang:elasticsearch-development"
    expose:
      - 9200
      - 9300
    logging: *logging
    networks:
      - "default"
    restart: "no"
    user: "elasticsearch"
    volumes:
      - type: "volume"
        source: "elasticsearch_data"
        target: "/usr/share/elasticsearch/data"
        read_only: false

  web:
    build:
      context: "../build/nginx"
      dockerfile: "local.Dockerfile"
      args:
        COMMON_NAME: "localhost"
    image: "mythrnr/template-pj-golang:web-development"
    depends_on:
      - "app"
    logging: *logging
    networks:
      - "default"
    restart: "no"
    ulimits: *ulimits
    volumes:
      - type: "bind"
        source: "../build/nginx/conf.d.local"
        target: "/etc/nginx/conf.d"
        read_only: true

volumes:
  elasticsearch_data:
  go_pkg:
  mysql_data:
